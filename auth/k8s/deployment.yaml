---
apiVersion: v1
kind: Service
metadata:
  name: {{service.name}}
spec:
  selector:
    app: {{service.name}}
  ports:
    - protocol: {{service.protocol|default('TCP')}}
      port: {{service.port|default('80')}}
      targetPort: {{service.targetPort|default('8080')}}
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {name: {{service.name}}}
spec:
  replicas: 1
  selector:
    matchLabels: {app: {{service.name}}}
  strategy:
    rollingUpdate: {maxSurge: 1, maxUnavailable: 0}
    type: RollingUpdate
  revisionHistoryLimit: 1
  template:
    metadata:
      labels: {app: {{service.name}}}
      name: {{service.name}}
    spec:
      containers:
      - image: {{build.images["Dockerfile"]}}
        imagePullPolicy: IfNotPresent
        name: {{service.name}}
        env:
        - name: AUTH0_DOMAIN
          value: {{service.auth0.domain}}
        - name: AUTH0_CLIENT_ID
          value: {{service.auth0.client_id}}
        - name: AUTH0_API_AUDIENCE
          value: {{service.auth0.api_audience or service.api_root}}
        - name: API_PROTO
          value: {{service.api_proto}}
        resources:
          requests:
            memory: {{service.min_memory}}
            cpu: {{service.min_cpu}}
          limits:
            memory: {{service.max_memory}}
            cpu: {{service.max_cpu}}
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
